{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEMA,EACE,mCADFA,EAEE,2CAgEOC,MA5Df,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwBA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAC9BH,EAAQG,KAAKC,KAAM,GAAM,WAAqB,MADhD,SAEE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBAAOG,KAAK,OAAOH,UAAU,aAC5BI,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WA/BM,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJnB,EAAS,IACTE,EAAWiB,GACXC,QAAQC,IAAIF,WA4Ba,oBAAhBlB,EAAQG,KACjB,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WACtD,qBAAKrB,UAAU,OAAf,SA3BU,SAACsB,GACnB,IAGIC,EAFO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAEzDD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAY,YAKhGL,EAAEM,YACjBC,EAAOP,EAAEQ,cACb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAmBHE,CAAY,IAAIC,WAEzC,qBAAKhC,UAAU,cAAf,SACE,sBAAKA,UAAU,OAAf,UACGiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAD3B,UAIF,qBAAKF,UAAU,UAAf,SACGF,EAAQA,QAAQ,GAAGG,UAGnB,SCxDbkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6186c3fa.chunk.js","sourcesContent":["import React , { useState } from 'react';\nimport './App.css';\nconst api = {\n  key : \"e9bc97bdd005bd43a4080de4d3207022\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\nfunction App() {\n  const [query , setQuery] = useState('');\n  const [weather , setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setQuery('');\n        setWeather(result);\n        console.log(result);\n      });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\", \"December\"];\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  }\n  return (\n    <div className={(typeof weather.main != 'undefined') ?\n    ((weather.main.temp >16) ? 'app warm' : 'app'): 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\"\n           placeholder=\"search...\" \n           onChange={e => setQuery(e.target.value)}\n           value={query}\n           onKeyPress={search}\n           />\n\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name},{weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}*C\n            </div>\n          </div>\n          <div className=\"weather\">\n            {weather.weather[0].main}\n          </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n//28_8FE,Mmj8hR6^","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}